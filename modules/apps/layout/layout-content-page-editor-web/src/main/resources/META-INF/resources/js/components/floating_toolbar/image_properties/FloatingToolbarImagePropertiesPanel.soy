{namespace com.liferay.layout.content.page.editor.web.FloatingToolbarImagePropertiesPanel}

/**
 * FloatingToolbarTextPropertiesPanel
 */
{template .render}
	{@param item: ?}
	{@param? _imageTargetOptions: list<[
		targetTypeId: string,
		label: string
	]>}
	{@param? _handleAltTextInputChange: any}
	{@param? _handleClearImageButtonClick: any}
	{@param? _handleImageLinkInputChange: any}
	{@param? _handleImageTargetOptionChange: any}
	{@param? _handleSelectImageButtonClick: any}

	<div class="floating-toolbar-spacing-panel p-3">
		{let $isMapped: (
			(isNonnull($item.editableValues.classNameId)) and ($item.editableValues.classNameId != '') or
			(isNonnull($item.editableValues.mappedField)) and ($item.editableValues.mappedField != '')
		) /}

		{if not $isMapped}
			<div class="form-group">
				<label for="floatingToolbarImagePropertiesPanelSelectImage">
					{msg desc=""}image{/msg}
				</label>

				<input
					class="form-control form-control-sm"
					id="floatingToolbarImagePropertiesPanelSelectImage"
					readonly="readonly"
					type="text"
					value="{$item.editableValues.config ? $item.editableValues.config.imageSource ?: '' : ''}"
				/>
			</div>

			<div class="form-group">
				<div class="btn-group">
					<div class="btn-group-item">
						<button
							class="btn btn-secondary btn-sm"
							data-onclick="{$_handleSelectImageButtonClick}"
							type="button"
						>
							{msg desc=""}select{/msg}
						</button>
					</div>

					<div class="btn-group-item">
						<button
							class="btn btn-secondary btn-outline-borderless btn-sm"
							data-onclick="{$_handleClearImageButtonClick}"
							type="button"
						>
							{msg desc=""}clear{/msg}
						</button>
					</div>
				</div>
			</div>
		{/if}

		{call .altText}
			{param _handleAltTextInputChange: $_handleAltTextInputChange /}
			{param item: $item /}
		{/call}

		{call .imageLink}
			{param _handleImageLinkInputChange: $_handleImageLinkInputChange /}
			{param item: $item /}
		{/call}

		{call .imageTargetOptions}
			{param _handleImageTargetOptionChange: $_handleImageTargetOptionChange /}
			{param imageTargetOptions: $_imageTargetOptions /}
			{param item: $item /}
		{/call}

	</div>
{/template}

/**
 * Alternative text Input
 */
{template .altText}
	{@param item: ?}
	{@param? _handleAltTextInputChange: any}

	<div class="form-group">
		<label for="floatingToolbarImagePropertiesPanelAltText">
			{msg desc=""}image-description{/msg}
		</label>

		{let $inputValue kind="text"}
			{if $item.editableValues.config and $item.editableValues.config.alt}
				{$item.editableValues.config.alt}
			{/if}
		{/let}

		<input
			class="form-control form-control-sm"
			data-onchange="{$_handleAltTextInputChange}"
			id="floatingToolbarImagePropertiesPanelAltText"
			title="{$inputValue}"
			type="text"
			value="{$inputValue}"
		/>
	</div>
{/template}

/**
 * Image Link Input
 */
{template .imageLink}
	{@param item: ?}
	{@param? _handleImageLinkInputChange: any}

	<div class="form-group">
		<label for="floatingToolbarImagePropertiesPanelImageLink">
			{msg desc=""}link{/msg}
		</label>

		{let $inputPlaceholder kind="text"}
			{msg desc=""}url{/msg}
		{/let}

		{let $inputValue kind="text"}
			{if $item.editableValues.config and $item.editableValues.config.imageLink}
				{$item.editableValues.config.imageLink}
			{/if}
		{/let}

		<input
			class="form-control form-control-sm"
			data-onchange="{$_handleImageLinkInputChange}"
			id="floatingToolbarImagePropertiesPanelImageLink"
			placeholder="{$inputPlaceholder}"
			title="{$inputValue}"
			type="text"
			value="{$inputValue}"
		/>
	</div>
{/template}

/**
 * Image Position option
 */
{template .imagePositionOption}
	{@param imagePosition: [
		imagePositionId: string,
		label: string
	]}
	{@param item: ?}

	{let $optionAttributes kind="attributes"}
		value="{$imagePosition.imagePositionId}"

		{if $item.editableValues.config and $item.editableValues.config.imagePosition == $imagePosition.imagePositionId}
			selected
		{/if}
	{/let}

	<option {$optionAttributes}>
		{$imagePosition.label}
	</option>
{/template}

/**
 * Image target options
 */
{template .imageTargetOptions}
	{@param item: ?}
	{@param? _handleImageTargetOptionChange: any}
	{@param? imageTargetOptions: list<[
		targetTypeId: string,
		label: string
	]>}

	{if $imageTargetOptions}
		<div class="form-group">
			<label for="floatingToolbarImagePropertiesPanelImageTarget">
				{msg desc=""}target{/msg}
			</label>

			<select
				class="form-control form-control-sm"
				data-onchange="{$_handleImageTargetOptionChange}"
				id="floatingToolbarImagePropertiesPanelImageTarget"
			>
				{foreach $imageTarget in $imageTargetOptions}
					{call .imageTargetOption}
						{param imageTarget: $imageTarget /}
						{param item: $item /}
						{param key: $imageTarget.targetTypeId /}
					{/call}
				{/foreach}
			</select>
		</div>
	{/if}
{/template}

/**
 * Image Target option
 */
{template .imageTargetOption}
	{@param imageTarget: [
		targetTypeId: string,
		label: string
	]}
	{@param item: ?}

	{let $optionAttributes kind="attributes"}
		value="{$imageTarget.targetTypeId}"

		{if $item.editableValues.config and $item.editableValues.config.imageTarget == $imageTarget.targetTypeId}
			selected
		{/if}
	{/let}

	<option {$optionAttributes}>
		{$imageTarget.label}
	</option>
{/template}