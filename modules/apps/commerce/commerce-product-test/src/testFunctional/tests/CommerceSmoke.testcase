@component-name = "portal-commerce"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Commerce";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Search");

		SearchAdministration.executeSearchActions(actionsDescription = "Reindex all search indexes.");

		Pause(locator1 = "5000");
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			Navigator.openURL();

			ProductMenu.gotoPortlet(
				category = "Commerce",
				panel = "Control Panel",
				portlet = "Products");

			if (IsElementNotPresent(locator1 = "CommerceNavigation#EMPTY_SEARCH_CONTAINER")) {
				CommerceProducts.deleteProductsEntry();
			}

			User.logoutPG();
		}
	}

	test PublishSimpleProduct {
		property environment.acceptance = "true";
		property portal.acceptance = "true";

		ProductMenu.gotoPortlet(
			category = "Commerce",
			panel = "Control Panel",
			portlet = "Products");

		CPCommerceCatalog.newProductsEntry(
			productName = "Simple T-Shirt",
			productType = "Simple");

		ProductMenu.gotoPortlet(
			category = "Commerce",
			panel = "Control Panel",
			portlet = "Products");

		CommerceNavigator.gotoEntry(entryName = "Simple T-Shirt");

		CommerceEntry.viewProductsEntry(
			productFullDescription = "Simple T-Shirt Full Description",
			productName = "Simple T-Shirt",
			productShortDescription = "Simple T-Shirt Short Description");
	}

}