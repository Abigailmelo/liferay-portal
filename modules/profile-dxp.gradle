import com.liferay.gradle.util.GradleUtil
import com.liferay.gradle.util.Validator

buildscript {
	apply from: file("build-buildscript.gradle"), to: buildscript
}

task checkoutDXPScript
task removeDXPScript

String repositoryURL = "git@github.com:liferay/liferay-portal-ee.git"

if (System.getenv("JENKINS_HOME")) {
	repositoryURL = "git@github-dev.liferay.com:liferay/liferay-portal-ee.git"
}

checkoutDXPScript {
	doLast {
		String branchName = GradleUtil.getProperty(project, "git.working.branch.name", (String)null)

		if (!branchName.endsWith("-private")) {
			branchName = branchName + "-private"
		}

		logger.lifecycle "git fetch --depth=1 --force --no-tags {} {}", repositoryURL, branchName + ":" + branchName

		exec {
			commandLine "git", "fetch", "--depth=1", "--force", "--no-tags", repositoryURL, branchName + ":" + branchName
			workingDir = projectDir.parentFile
		}

		exec {
			commandLine "git", "tag", "--force", "git-commit-portal-private", branchName
			workingDir = projectDir.parentFile
		}

		exec {
			commandLine "git", "checkout", "refs/tags/git-commit-portal-private", "--", "build-working-dir.xml", "working.dir.properties"
			workingDir = projectDir.parentFile
		}

		exec {
			commandLine "git", "tag", "--delete", "git-commit-portal-private"
			workingDir = projectDir.parentFile
		}
	}
}

removeDXPScript {
	doLast {
		exec {
			commandLine "git", "rm", "--force", "build-working-dir.xml", "working.dir.properties"
			workingDir = projectDir.parentFile
		}
	}
}