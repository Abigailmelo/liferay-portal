@component-name = "portal-security"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property test.assert.warning.exceptions = "true";
	property testray.main.component.name = "CAPTCHA";

	setUp {
		TestCase.setUpPortalInstance();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			User.firstLoginPG();

			Page.tearDownCP();
		}
	}

	@priority = "4"
	test ViewCaptchaEnabled {
		property captcha.enabled = "true";

		SignInNavigator.gotoCreateAccount();

		User.viewCaptchaPG(captchaType = "captcha");
	}

	@priority = "4"
	test ViewRecaptchaEnabled {
		property captcha.enabled = "true";
		property test.name.skip.portal.instance = "Captcha#ViewRecaptchaEnabled";
		var recaptchaPrivateKey = PropsUtil.get("recaptcha.private.key");
		var recaptchaPublicKey = PropsUtil.get("recaptcha.public.key");

		User.firstLoginPG();

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "System Settings");

		SystemSettings.gotoConfiguration(
			configurationCategory = "Security Tools",
			configurationName = "CAPTCHA",
			configurationScope = "System Scope");

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "System Settings");

		SystemSettings.gotoConfiguration(
			configurationCategory = "Security Tools",
			configurationName = "CAPTCHA",
			configurationScope = "System Scope");

		if (IsElementPresent(locator1 = "Icon#BODY_VERTICAL_ELLIPSIS")) {
			SystemSettings.resetConfiguration();
		}

		SystemSettings.editTextSetting(
			settingName = "Maximum Challenges",
			settingValue = "0");

		SystemSettings.selectOptionSetting(
			fieldName = "CAPTCHA Engine",
			selectOption = "reCAPTCHA");

		SystemSettings.editTextAreaSetting(
			settingName = "reCAPTCHA Private Key",
			settingValue = "${recaptchaPrivateKey}");

		SystemSettings.editTextAreaSetting(
			settingName = "reCAPTCHA Public Key",
			settingValue = "${recaptchaPublicKey}");

		SystemSettings.saveConfiguration();

		User.logoutPG();

		SignInNavigator.gotoCreateAccount();

		User.viewCaptchaPG(captchaType = "recaptcha");
	}

}