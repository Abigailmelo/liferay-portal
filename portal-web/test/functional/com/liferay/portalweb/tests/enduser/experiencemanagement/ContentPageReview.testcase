@component-name = "portal-collaboration"
definition {

	property osgi.module.configuration.file.names = "com.liferay.layout.content.page.editor.web.internal.configuration.ContentPageEditorCommentsConfiguration-default.config";
	property osgi.module.configurations = "enabled=B&quot;true&quot;";
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Content Pages";

	setUp {
		task ("Set up instance and sign in") {
			TestCase.setUpPortalInstance();

			User.firstLoginPG();
		}

		task ("Add a site via JSON") {
			JSONGroup.addGroup(groupName = "Test Site Name");
		}

		task ("Import test fragments from dependencies folder") {
			FragmentsAdmin.openFragmentsAdmin(siteURLKey = "test-site-name");

			FragmentsAdmin.importCollectionFromDependenciesFolder(collectionZipFile = "fragment-collection.zip");
		}
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "Test Site Name");
		}
	}

	@description = "This case ensures that the user can add a comment to a fragment of a content page."
	@priority = "5"
	test AddComment {
		SitePages.openPagesAdmin(siteURLKey = "test-site-name");

		ContentPages.addPage(pageName = "Test Content Page Name");

		PageEditor.addFragment(
			collectionName = "Collection Name",
			fragmentName = "Title");

		PageEditor.addComment(
			content = "Lorem ipsum dolor sit amet",
			fragmentClass = "header",
			fragmentComment = "This is a fragment comment!",
			fragmentName = "Title",
			position = "1");

		PageEditor.viewComment(fragmentComment = "This is a fragment comment!");
	}

	@description = "This case ensures that the user can add a comment with escape characters to a fragment of a content page."
	@priority = "4"
	test AddCommentWithEscapeCharacters {
		SitePages.openPagesAdmin(siteURLKey = "test-site-name");

		ContentPages.addPage(pageName = "Test Content Page Name");

		PageEditor.addFragment(
			collectionName = "Collection Name",
			fragmentName = "Content");

		PageEditor.addComment(
			content = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean tempus eleifend lacus nec porttitor. Vestibulum pharetra ullamcorper felis volutpat commodo. Nam id ipsum placerat, hendrerit orci eu, congue nisi. Proin.",
			fragmentClass = "body",
			fragmentComment = '''& < > " Escape Characters Comment''',
			fragmentName = "Content",
			position = "1");

		PageEditor.viewComment(fragmentComment = '''& < > " Escape Characters Comment''');
	}

	@description = "This case ensures a user can delete a fragment comment after publishing a content page."
	@priority = "5"
	test DeleteComment {
		SitePages.openPagesAdmin(siteURLKey = "test-site-name");

		ContentPages.addPage(pageName = "Test Content Page Name");

		PageEditor.addFragment(
			collectionName = "Collection Name",
			fragmentName = "Title");

		PageEditor.addComment(
			content = "Lorem ipsum dolor sit amet",
			fragmentClass = "header",
			fragmentComment = "This is a fragment comment.",
			fragmentName = "Title",
			position = "1");

		PageEditor.clickPublish();

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/test-content-page-name");

		ContentPages.clickPencil();

		Click(
			key_content = "Lorem ipsum dolor sit amet",
			key_fragmentClass = "header",
			key_position = "1",
			locator1 = "Fragment#FRAGMENT");

		PageEditor.gotoTab(tabName = "Comments");

		PageEditor.viewComment(fragmentComment = "This is a fragment comment.");

		PageEditor.replyToComment(commentReply = "Fragment Comment.");

		PageEditor.deleteComment(fragmentComment = "This is a fragment comment.");
	}

	@description = "This test ensures that once the proper configuration file is added, Portal starts up with Content Page comments loaded."
	@priority = "5"
	test Smoke {
		SitePages.openPagesAdmin(siteURLKey = "test-site-name");

		ContentPages.addPage(pageName = "Test Content Page Name");

		PageEditor.gotoTab(tabName = "Comments");

		PageEditor.viewComment();

		PageEditor.closeSidebar(tabName = "Comments");
	}

	@description = "This case ensures that the user can see a fragment comment after publishing a content page."
	@priority = "5"
	test ViewComment {
		SitePages.openPagesAdmin(siteURLKey = "test-site-name");

		ContentPages.addPage(pageName = "Test Content Page Name");

		PageEditor.addFragment(
			collectionName = "Collection Name",
			fragmentName = "Rich Text");

		PageEditor.addComment(
			content = "Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
			fragmentClass = "rich-text",
			fragmentComment = "This is a fragment comment!",
			fragmentName = "Rich Text",
			position = "1");

		PageEditor.clickPublish();

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/test-content-page-name");

		ContentPages.clickPencil();

		Click(
			key_content = "Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
			key_fragmentClass = "rich-text",
			key_position = "1",
			locator1 = "Fragment#FRAGMENT");

		PageEditor.gotoTab(tabName = "Comments");

		PageEditor.viewComment(
			fragmentComment = "This is a fragment comment!",
			key_secondary = "Rich Text");
	}

	@description = "This case ensures that the user can see an edited fragment comment after publishing a content page."
	@priority = "4"
	test ViewEditedComment {
		SitePages.openPagesAdmin(siteURLKey = "test-site-name");

		ContentPages.addPage(pageName = "Test Content Page Name");

		PageEditor.addFragment(
			collectionName = "Collection Name",
			fragmentName = "Static Text");

		PageEditor.addComment(
			content = "This is static text.",
			fragmentClass = "static-text",
			fragmentComment = "This is a fragment comment.",
			fragmentName = "Static Text",
			position = "1");

		PageEditor.editComment(fragmentCommentEdit = "This is a fragment comment edited.");

		PageEditor.clickPublish();

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/test-content-page-name");

		ContentPages.clickPencil();

		Click(
			key_content = "This is static text.",
			key_fragmentClass = "static-text",
			key_position = "1",
			locator1 = "Fragment#FRAGMENT");

		PageEditor.gotoTab(tabName = "Comments");

		PageEditor.viewComment(fragmentComment = "This is a fragment comment edited.");
	}

}