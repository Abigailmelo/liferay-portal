@component-name = "portal-wcm"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Fragments";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "System Settings");

		SystemSettings.gotoConfiguration(
			configurationCategory = "Page Fragments",
			configurationName = "Page Fragments",
			configurationScope = "Virtual Instance Scope");

		FormFields.enableCheckbox(fieldName = "enableConfiguration");

		SystemSettings.saveConfiguration();

		JSONGroup.addGroup(groupName = "Test Site Name");

		JSONFragment.addFragmentCollection(
			groupName = "Test Site Name",
			name = "Collection Name");

		FragmentsAdmin.openFragmentsAdmin(siteURLKey = "test-site-name");

		FragmentsAdmin.gotoCollection(collectionName = "Collection Name");
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "Test Site Name");
		}
	}

	@description = "This is a test for LPS-97184. Invalid fragment configuration cannot be published and offers useful advice."
	@priority = "4"
	test AddInvalidConfiguration {
		property test.name.skip.portal.instance = "FragmentsConfiguration#AddInvalidConfiguration";

		FragmentsAdmin.addSection(fragmentName = "Fragment Name");

		FragmentsEditor.gotoConfigurationTab();

		FragmentsEditor.typeFileContent(fileName = "fragment_configuration_invalid.json");

		FragmentsEditor.viewLineError(lineNumber = "4");

		task ("Publish the fragment and assert there is an error message") {
			Button.clickPublish();

			Alert.viewErrorMessage(errorMessage = "Please provide a valid configuration for the fragment.");
		}
	}

	@description = "This is a test for LPS-99377. User can change checkbox fragment configuration."
	@priority = "4"
	test AddTypeCheckboxConfiguration {
		property portal.acceptance = "true";

		task ("Add a section fragment to the fragment collection via JSON") {
			var htmlSnippet = FragmentsAdmin.getFragmentFileContent(fileName = "checkbox_configuration.html");
			var jsonSnippet = FragmentsAdmin.getFragmentFileContent(fileName = "checkbox_configuration.json");

			JSONFragment.addSection(
				collectionName = "Collection Name",
				configuration = "${jsonSnippet}",
				groupName = "Test Site Name",
				html = "${htmlSnippet}",
				name = "Checkbox Fragment Example");
		}

		FragmentsAdmin.openFragmentsAdmin(siteURLKey = "test-site-name");

		SitePages.openPagesAdmin(siteURLKey = "test-site-name");

		ContentPages.addPage(pageName = "Test Content Page Name");

		PageEditor.addFragment(
			collectionName = "Collection Name",
			fragmentName = "Checkbox Fragment Example");

		PageEditor.clickPublish();

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/test-content-page-name");

		task ("Assert the section fragment is present") {
			AssertVisible(
				key_content = "Body Present!!",
				key_fragmentClass = "configuration",
				key_position = "1",
				locator1 = "Fragment#FRAGMENT");
		}

		ContentPages.clickPencil();

		FragmentsAdmin.clickCheckbox(
			checkboxName = "Hide Body"
			fragmentPosition = "1");

		FragmentsAdmin.clickCheckbox(
			checkboxName = "Make Bold"
			fragmentPosition = "1");

		PageEditor.clickPublish();

		task ("Assert the section fragment is present") {
			AssertVisible(
				key_content = "Bold Words",
				key_fragmentClass = "configuration",
				key_position = "1",
				locator1 = "Fragment#FRAGMENT");
		}
	}

	@description = "This is a test for LPS-97184. Valid fragment configuration can be published."
	@priority = "4"
	test AddValidConfiguration {
		property test.name.skip.portal.instance = "FragmentsConfiguration#AddValidConfiguration";

		FragmentsAdmin.addSection(fragmentName = "Fragment Name");

		FragmentsEditor.gotoConfigurationTab();

		FragmentsEditor.typeFileContent(fileName = "fragment_configuration.json");

		FragmentsEditor.gotoCodeTab();

		FragmentsEditor.typeFileContent(fileName = "fragment_configuration.html");

		FragmentsEditor.publish();
	}

}