@component-name = "portal-collaboration"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Documents Management";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		JSONGroup.addGroup(groupName = "Site Name");

		JSONLayout.addPublicLayout(
			groupName = "Site Name",
			layoutName = "Staging DM Page");
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "Site Name");
			JSONGroup.deleteGroupByName(groupName = "Remote Site");
		}
	}

	@description = "This test covers LPS-83426. It views management bar details in the staging site."
	@priority = "4"
	test StagingViewManagementBarDetails {
		property custom.properties = "tunneling.servlet.shared.secret=1234567890123456${line.separator}auth.verifier.TunnelAuthVerifier.hosts.allowed=";
		property test.name.skip.portal.instance = "RemoteStagingDM#StagingViewManagementBarDetails";

		Staging.remoteStagingSetUp(siteName = "Site Name");

		Navigator.openSiteURL(siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media");

		DMDocument.addCP(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_3.txt",
			dmDocumentTitle = "Document_3.txt");

		DMDocument.viewStagingDetailsManagementBar(dmDocumentTitle = "Document_3.txt");
	}

}