@component-name = "portal-performance-and-fault-tolerance-ee"
definition {
	property app.server.bundles.size = "1";
	property cluster.enabled = "true";
	property portal.release = "true";
	property portal.upstream = "true";
	property remote.elasticsearch.enabled = "true";
	property test.assert.warning.exceptions = "true";
	property testray.main.component.name = "Clustering";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			Page.tearDownCP();

			BlogsEntry.tearDownCP();
		}
	}

	@priority = "5"
	test StartupJDBCPING {
		property cluster.jdbc.ping = "true";
		property test.name.skip.portal.instance = "ClusteringConfigs#StartupJDBCPING";

		AssertConsoleTextPresent(value1 = "Accepted view");
		AssertConsoleTextPresent(value1 = "channelName: liferay-channel-control");
		AssertConsoleTextPresent(value1 = "JDBC_PING");

		var log2 = Clustering.getLogFileSpecificServer(nodePort = "9080");

		if ((contains("${log2}", "Accepted view")) && (contains("${log2}", "channelName: liferay-channel-control")) && (contains("${log2}", "JDBC_PING"))) {
			echo("Second node started successfully with JDBC_PING configuration");
		}
		else {
			fail("Fail to successfully start second node on JDBC_PING.");
		}
	}
}