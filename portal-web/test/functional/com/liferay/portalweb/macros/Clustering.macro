definition {

	@description = "Get cluster node outgoing ip address in console"
	macro getClusterNodeOutgoingIPAddress {
		var leadingPortNumber = StringUtil.replace("${nodePort}", "080", "");
		var bundleIndex = MathUtil.difference("${leadingPortNumber}", "8");

		AntCommand(
			locator1 = "build-test.xml",
			value1 = "copy-cluster-log -Dapp.server.bundle.index=${bundleIndex}");

		var liferayHome = PropsUtil.get("liferay.home.dir.name");
		var fileContent = FileUtil.read("${liferayHome}/cluster${bundleIndex}.log");

		var ipAddress = StringUtil.extractLast("${fileContent}", "Setting JGroups outgoing IP address to");
		var ipAddress = StringUtil.extractFirst("${ipAddress}", "and interface to");
		var ipAddress = StringUtil.trim("${ipAddress}");
		return "${ipAddress}";

		echo("outgoing IP Address of ${nodePort} is ${ipAddress}");
	}

	macro viewClusterStatusInConsole {
		AssertConsoleTextPresent(value1 = "Accepted view");

		AssertConsoleTextPresent(value1 = "com.liferay.portal.cluster.multiple");

		AssertConsoleTextPresent(value1 = "com.liferay.portal.cache.multiple");

		AssertConsoleTextPresent(value1 = "com.liferay.portal.scheduler.multiple");
	}

	macro viewClusterStatusInConsoleCE {
		AssertConsoleTextPresent(value1 = "Accepted view");

		AssertConsoleTextPresent(value1 = "com.liferay.portal.cluster.multiple");

		AssertConsoleTextPresent(value1 = "com.liferay.portal.cache.ehcache.multiple");

		AssertConsoleTextPresent(value1 = "com.liferay.portal.scheduler.multiple");
	}

}