definition {
	@description = "Deploy the following jar into Liferay Portal server with port ${nodePort}: ${liferayDependencyJars}"
	macro deployJarOnSpecificServer {
		var leadingPortNumber = StringUtil.replace("${nodePort}", "080", "");
		var bundleIndex = MathUtil.difference("${leadingPortNumber}", "8");

		AntCommand(
			locator1 = "build-test.xml",
			value1 = "deploy-dependency-jars -Dliferay.dependency.jars=${liferayDependencyJars} -Dapp.server.bundle.index=${bundleIndex}"
		);
	}

	@description = "Get cluster node control address in console"
	macro getClusterNodeControlAddress {
		var leadingPortNumber = StringUtil.replace("${nodePort}", "080", "");
		var bundleIndex = MathUtil.difference("${leadingPortNumber}", "8");

		var liferayHome = PropsUtil.get("liferay.home.dir.name");
		var fileContent = FileUtil.read("${liferayHome}/cluster${bundleIndex}.log");

		var controlAddress = StringUtil.extractLast("${fileContent}", "liferay-channel-control, localAddress:");
		var controlAddress = StringUtil.extractFirst("${controlAddress}", "properties");
		var controlAddress = StringUtil.replace("${controlAddress}", ",", "");
		var controlAddress = StringUtil.trim("${controlAddress}");
		return "${controlAddress}";

		echo("control Address of ${nodePort} is ${controlAddress}");
	}

	@description = "Get cluster node transport address in console"
	macro getClusterNodeTransportAddress {
		var leadingPortNumber = StringUtil.replace("${nodePort}", "080", "");
		var bundleIndex = MathUtil.difference("${leadingPortNumber}", "8");

		var liferayHome = PropsUtil.get("liferay.home.dir.name");
		var fileContent = FileUtil.read("${liferayHome}/cluster${bundleIndex}.log");

		var transportAddress = StringUtil.extractLast("${fileContent}", "liferay-channel-transport-0, localAddress:");
		var transportAddress = StringUtil.extractFirst("${transportAddress}", "properties");
		var transportAddress = StringUtil.replace("${transportAddress}", ",", "");
		var transportAddress = StringUtil.trim("${transportAddress}");
		return "${transportAddress}";

		echo("transport Address of ${nodePort} is ${transportAddress}");
	}

	@description = "This will get the log content for a specific clustered server bundle"
	macro getLogFileSpecificServer {
		AntCommand(
			locator1 = "build-test.xml",
			value1 = "copy-cluster-log -Dapp.server.bundle.index=${bundleIndex}"
		);

		var liferayHome = PropsUtil.get("liferay.home.dir.name");
		var fileContent = FileUtil.read("${liferayHome}/cluster${bundleIndex}.log");

		return "${fileContent}";
	}

	@description = "This will shutdown the server at a specific bundle at ${base_branch}-bundles-${bundle_index}\tomcat."
	macro shutdownSpecificServer {
		var leadingPortNumber = StringUtil.replace("${nodePort}", "080", "");
		var bundleIndex = MathUtil.difference("${leadingPortNumber}", "8");

		AntCommand(
			locator1 = "build-test.xml",
			value1 = "stop-app-server -Dapp.server.bundle.index=${bundleIndex}"
		);
	}

	@description = "This will start the server at a specific bundle at ${base_branch}-bundles-${bundle_index}\tomcat."
	macro startSpecificServer {
		var leadingPortNumber = StringUtil.replace("${nodePort}", "080", "");
		var bundleIndex = MathUtil.difference("${leadingPortNumber}", "8");

		if ("${deleteLiferayHome}" == "false") {
			AntCommand(
				locator1 = "build-test.xml",
				value1 = "start-app-server -Dapp.server.bundle.index=${bundleIndex} -Ddelete.liferay.home=false"
			);
		}
		else if ("${keepCachedAppServerData}" == "true") {
			AntCommand(
				locator1 = "build-test.xml",
				value1 = "start-app-server -Dapp.server.bundle.index=${bundleIndex} -Dkeep.cached.app.server.data=true"
			);
		}
		else {
			AntCommand(
				locator1 = "build-test.xml",
				value1 = "start-app-server -Dapp.server.bundle.index=${bundleIndex}"
			);
		}
	}

	macro updatePortalPropertiesOnSpecificServer {
		var leadingPortNumber = StringUtil.replace("${nodePort}", "080", "");
		var bundleIndex = MathUtil.difference("${leadingPortNumber}", "8");

		AntCommand(
			locator1 = "build-test.xml",
			value1 = "portal-ext-properties-update -Dapp.server.bundle.index=${bundleIndex} -Dupdate.properties.original=${propertiesOriginal} -Dupdate.properties=${propertiesUpdate}"
		);
	}

	macro viewClusterStatusInConsole {
		AssertConsoleTextPresent(value1 = "Accepted view");

		AssertConsoleTextPresent(value1 = "com.liferay.portal.cluster.multiple");

		AssertConsoleTextPresent(value1 = "com.liferay.portal.cache.multiple");

		AssertConsoleTextPresent(value1 = "com.liferay.portal.scheduler.multiple");
	}

	@description = "This will view the text shows at a specific bundle at ${base_branch}-bundles-${bundle_index}/logs."
	macro viewTextPresentOnSpecificConsole {
		var leadingPortNumber = StringUtil.replace("${nodePort}", "080", "");
		var bundleIndex = MathUtil.difference("${leadingPortNumber}", "8");

		var liferayHome = PropsUtil.get("liferay.home.dir.name");
		var fileContent = FileUtil.read("${liferayHome}/cluster${bundleIndex}.log");

		if (contains("${fileContent}", "${expectText}")) {
			echo("${nodePort}: ${expectText}");
		}
		else {
			fail("Fail to find the log present on Console");
		}
	}

	@description = "This will view the text not shows at a specific bundle at ${base_branch}-bundles-${bundle_index}/logs."
	macro viewTextNotPresentOnSpecificConsole {
		var leadingPortNumber = StringUtil.replace("${nodePort}", "080", "");
		var bundleIndex = MathUtil.difference("${leadingPortNumber}", "8");

		var liferayHome = PropsUtil.get("liferay.home.dir.name");
		var fileContent = FileUtil.read("${liferayHome}/cluster${bundleIndex}.log");

		if (!(contains("${fileContent}", "${exceptionText}"))) {
			echo("No exception on Console");
		}
		else {
			fail("Got exception ${exceptionText} on ${nodePort}");
		}
	}
}