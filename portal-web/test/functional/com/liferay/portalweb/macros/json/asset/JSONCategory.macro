definition {

	@summary = "Add a basic category"
	macro addCategory {
		Variables.assertDefined(parameterList = "${groupName},${vocabularyName}");

		JSONUtil2._exclusiveOrCheck(
			A = "${title}",
			B = "${titleMap}",
			failMessage = "Please only set 'title' or only 'titleMap' but not both or none.");

		var groupId = JSONGroupAPI._getGroupIdByName(groupName = "${groupName}");

		var vocabularyId = JSONCategoryAPI._getVocabularyIdByName(
			groupId = "${groupId}",
			vocabularyName = "${vocabularyName}"
		);

		if (!(isSet(parentCategoryId))) {
			var parentCategoryId = "0";
		}

		if (isSet(titleMap)) {
			var titleMap = JSONUtil2._convertLocalizedListToMap(listMap = "${titleMap}");
		}
		else {
			var titleMap = '''{"en_US":"${title}"}''';
		}

		if (isSet(descriptionMap)) {
			var descriptionMap = JSONUtil2._convertLocalizedListToMap(listMap = "${descriptionMap}");
		}
		else if (isSet(description)) {
			var descriptionMap = '''{"en_US":"${description}"}''';
		}
		else {
			var descriptionMap = "{}";
		}

		JSONCategoryAPI._addCategory(
			description = "${description}",
			descriptionMap = "${descriptionMap}",
			groupId = "${groupId}",
			title = "${title}",
			titleMap = "${titleMap}",
			vocabularyId = "${vocabularyId}");
	}

	@summary = "Add a basic subcategory"
	macro addSubcategory {
		Variables.assertDefined(parameterList = "${groupName},${parentCategoryName},${vocabularyName}");

		JSONUtil2._exclusiveOrCheck(
			A = "${title}",
			B = "${titleMap}",
			failMessage = "Please only set 'title' or only 'titleMap' but not both or none.");

		var groupId = JSONGroupAPI._getGroupIdByName(groupName = "${groupName}");

		var vocabularyId = JSONCategoryAPI._getVocabularyIdByName(
			groupId = "${groupId}",
			vocabularyName = "${vocabularyName}"
		);

		var parentCategoryId = JSONCategoryAPI._getCategoryIdByName(
			categoryName = "${parentCategoryName}",
			groupId = "${groupId}",
			vocabularyId = "${vocabularyId}"
		);

		JSONCategoryAPI._addCategory(
			groupId = "${groupId}",
			parentCategoryId = "${parentCategoryId}",
			title = "${title}",
			titleMap = "${titleMap}",
			vocabularyId = "${vocabularyId}");
	}

	@summary = "Add a basic vocabulary"
	macro addVocabulary {
		Variables.assertDefined(parameterList = "${groupName}");

		JSONUtil2._exclusiveOrCheck(
			A = "${title}",
			B = "${titleMap}",
			failMessage = "Please only set 'title' or only 'titleMap' but not both or none.");

		if (isSet(titleMap)) {
			var titleMap = JSONUtil2._convertLocalizedListToMap(listMap = "${titleMap}");
		}
		else {
			var titleMap = '''{"en_US":"${title}"}''';
		}

		if (isSet(descriptionMap)) {
			var descriptionMap = JSONUtil2._convertLocalizedListToMap(listMap = "${descriptionMap}");
		}
		else if (isSet(description)) {
			var descriptionMap = '''{"en_US":"${description}"}''';
		}
		else {
			var descriptionMap = "{}";
		}

		var groupId = JSONGroupAPI._getGroupIdByName(groupName = "${groupName}");

		JSONCategoryAPI._addVocabulary(
			description = "${description}",
			descriptionMap = "${descriptionMap}",
			groupId = "${groupId}",
			title = "${title}",
			titleMap = "${titleMap}");
	}

	@summary = "Get the categoryId from any category by using categoryName, groupId, and vocabularyId"
	macro getCategoryId {
		Variables.assertDefined(parameterList = "${groupName},${categoryName},${vocabularyName}");

		var groupId = JSONGroupAPI._getGroupIdByName(groupName = "${groupName}");

		var vocabularyId = JSONCategoryAPI._getVocabularyIdByName(
			groupId = "${groupId}",
			vocabularyName = "${vocabularyName}"
		);

		var categoryId = JSONCategoryAPI._getCategoryIdByName(
			categoryName = "${categoryName}",
			groupId = "${groupId}",
			vocabularyId = "${vocabularyId}"
		);

		return "${categoryId}";
	}

}